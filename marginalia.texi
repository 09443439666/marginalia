\input texinfo    @c -*- texinfo -*-
@c %**start of header
@setfilename marginalia.info
@settitle marginalia.el - Marginalia in the minibuffer
@documentencoding UTF-8
@documentlanguage en
@c %**end of header

@dircategory Emacs
@direntry
* Marginalia: (marginalia). Marginalia in the minibuffer.
@end direntry

@finalout
@titlepage
@title marginalia.el - Marginalia in the minibuffer
@author Omar Antol√≠n Camarena, Daniel Mendler
@end titlepage

@contents

@ifnottex
@node Top
@top marginalia.el - Marginalia in the minibuffer
@end ifnottex

@menu
* Introduction::
* Configuration::
* Using builtin or lightweight annotators::
* Contributions::
@end menu

@node Introduction
@chapter Introduction

This package provides @samp{marginalia-mode} which adds marginalia to the
minibuffer completions.
@uref{https://en.wikipedia.org/wiki/Marginalia, Marginalia} are marks or
annotations placed at the margin of the page of a book or in this case
helpful colorful annotations placed at the margin of the minibuffer for
your completion candidates. Marginalia can only add annotations to be
displayed with the completion candidates. It cannot modify the
appearance of the candidates themselves, which are shown as supplied by
the original commands.

The annotations are added based on the completion category. For example
@samp{find-file} reports the @samp{file} category and @samp{M-x} reports the @samp{command}
category. You can cycle between more or less detailed annotators with the
command @samp{marginalia-cycle}.

Since many commands do not report a completion category themselves,
Marginalia provides a classifier system, which tries to guess the
correct category based for example on the prompt (see the variable
@samp{marginalia-prompt-categories}). Usually these heuristic classifiers
work well, but if they do not there is always the possibility to
overwrite categories by command name. This way you can associate a fixed
category with the completion initiated by the command (see the variable
@samp{marginalia-command-categories}). The list of available classifiers is
specified by the variable @samp{marginalia-classifiers}.

@node Configuration
@chapter Configuration

It is recommended to use Marginalia together with either the @uref{https://github.com/raxod502/selectrum, Selectrum}, @uref{https://github.com/minad/vertico, Vertico}
or the @uref{https://github.com/oantolin/icomplete-vertical, Icomplete-vertical} completion system. Furthermore Marginalia can be
combined with @uref{https://github.com/oantolin/embark, Embark} for action support and @uref{https://github.com/minad/consult, Consult}, which provides many useful
commands.

@lisp
;; Enable richer annotations using the Marginalia package
(use-package marginalia
  ;; Either bind `marginalia-cycle` globally or only in the minibuffer
  :bind (("M-A" . marginalia-cycle)
         :map minibuffer-local-map
         ("M-A" . marginalia-cycle))

  ;; The :init configuration is always executed (Not lazy!)
  :init

  ;; Must be in the :init section of use-package such that the mode gets
  ;; enabled right away. Note that this forces loading the package.
  (marginalia-mode))
@end lisp

@node Using builtin or lightweight annotators
@chapter Using builtin or lightweight annotators

Marginalia activates visually heavy annotators by default. Depending on your
preference you may want to use the builtin annotators or even no annotators by
default and only activate the annotators on demand by invoking
@code{marginalia-cycle}.

In order to use the builtin annotators by default, you can use the following
snippet. Replace @samp{builtin} by @samp{none} to disable annotators by default.

@lisp
(mapc
 (lambda (x) (setcdr x (cons 'builtin (delete 'builtin (cdr x)))))
 marginalia-annotator-registry)
@end lisp

After having cycled the annotators you may want to automatically save the
annotator configuration. This can be achieved using an advice which calls
@code{customize-save-variable}:

@lisp
(advice-add #'marginalia-cycle :after
            (lambda ()
              (let ((inhibit-message t))
                (customize-save-variable 'marginalia-annotator-registry
                                         marginalia-annotator-registry))))
@end lisp

@node Contributions
@chapter Contributions

Since it is planned to submit this package to GNU ELPA, contributions require a
copyright assignment to the FSF@.

@bye